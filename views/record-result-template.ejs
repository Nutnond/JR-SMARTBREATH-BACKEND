<!DOCTYPE html>
<html lang="th">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏î - SMARTBREATH</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Sarabun:wght@300;400;500;600;700;800&display=swap');

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --primary-color: #667eea;
            --secondary-color: #764ba2;
            --success-color: #4CAF50;
            --warning-color: #FF9800;
            --danger-color: #f44336;
            --text-primary: #2d3748;
            --text-secondary: #4a5568;
            --text-muted: #718096;
            --bg-light: #f8fafc;
            --bg-card: #ffffff;
            --border-light: #e2e8f0;
        }

        /* PDF-Optimized Styles */
        body {
            font-family: 'Sarabun', 'TH SarabunPSK', 'Helvetica', 'Arial', sans-serif;
            font-size: 14px;
            line-height: 1.6;
            color: var(--text-primary);
            background: white;
            -webkit-print-color-adjust: exact;
            print-color-adjust: exact;
            margin: 0;
            padding: 0;
        }

        .container {
            width: 100%;
            max-width: 210mm;
            margin: 0 auto;
            background: white;
            min-height: 100vh;
        }

        /* Header Section */
        .header {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            padding: 25mm 20mm 15mm 20mm;
            text-align: center;
            position: relative;
            -webkit-print-color-adjust: exact;
            print-color-adjust: exact;
            page-break-after: avoid;
        }

        .header h1 {
            font-size: 26px;
            font-weight: 700;
            margin-bottom: 8px;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
        }

        .header p {
            font-size: 15px;
            margin-bottom: 12px;
            opacity: 0.9;
        }

        .report-id {
            display: inline-block;
            background: rgba(255, 255, 255, 0.2);
            padding: 6px 18px;
            border-radius: 18px;
            font-size: 13px;
            font-weight: 600;
            border: 1px solid rgba(255, 255, 255, 0.3);
        }

        /* Content Section */
        .content {
            padding: 15mm 20mm;
        }

        .section {
            margin-top: 20px;
            margin-bottom: 25px;
            page-break-inside: avoid;
            /* ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î section ‡∏Ç‡∏∂‡πâ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà */
        }

        /* START: Style for forcing a page break before a specific element */
        .force-page-break-before {
            page-break-before: always;
        }

        /* END: Style for forcing a page break */

        /* START: Style to keep a group of elements together */
        .unbreakable-group {
            page-break-inside: avoid;
        }

        /* END: Style to keep a group of elements together */

        /* START: Style for adding top space */
        .extra-margin-top {
            padding-top: 40px;
            /* Changed to padding-top for reliability */
        }

        /* END: Style for adding top space */

        .section-header {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 3px solid var(--border-light);
            position: relative;
        }

        .section-header::after {
            content: '';
            position: absolute;
            bottom: -3px;
            left: 0;
            width: 45px;
            height: 3px;
            background: var(--primary-color);
        }

        .section h2 {
            font-size: 18px;
            font-weight: 600;
            color: var(--text-primary);
        }

        /* üéØ NEW STYLE: Patient Info Specific Card */
        .patient-info-card {
            background-color: var(--bg-light);
            border: 1px solid var(--border-light);
            border-left: 5px solid var(--secondary-color);
            /* Highlight color */
            border-radius: 10px;
            padding: 15px 20px;
            margin-top: 5px;
            font-size: 13px;
            page-break-inside: avoid;
        }

        .patient-info-card div {
            margin-bottom: 5px;
            display: flex;
            justify-content: space-between;
            line-height: 1.4;
        }

        .patient-info-card strong {
            color: var(--text-primary);
            font-weight: 600;
        }

        .patient-info-card span {
            color: var(--text-secondary);
        }

        /* üéØ END NEW STYLE */


        /* Grid Layout */
        .info-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 15px;
        }

        .info-grid.single-column {
            grid-template-columns: 1fr;
        }

        .info-card {
            background: var(--bg-card);
            border: 2px solid var(--border-light);
            border-radius: 10px;
            padding: 18px;
            position: relative;
            page-break-inside: avoid;
            min-height: 80px;
            display: flex;
            flex-direction: column;
        }

        .info-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 4px;
            height: 100%;
            background: var(--primary-color);
            border-radius: 2px 0 0 2px;
        }

        .info-label {
            display: block;
            font-weight: 600;
            color: var(--text-secondary);
            margin-bottom: 8px;
            font-size: 11px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            line-height: 1.4;
        }

        .info-value {
            font-size: 17px;
            font-weight: 600;
            color: var(--text-primary);
            line-height: 1.3;
            flex-grow: 1;
            display: flex;
            align-items: center;
        }

        /* Measurement Highlights */
        .measurement-highlight {
            background: var(--primary-color) !important;
            color: white !important;
            border-color: var(--primary-color) !important;
            -webkit-print-color-adjust: exact;
            print-color-adjust: exact;
        }

        .measurement-highlight::before {
            background: rgba(255, 255, 255, 0.3) !important;
        }

        .measurement-highlight .info-label {
            color: rgba(255, 255, 255, 0.9) !important;
        }

        .measurement-highlight .info-value {
            color: white !important;
            font-size: 20px;
            font-weight: 700;
            /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô */
        }

        /* üéØ NEW: Style for %Predicted */
        .percent-predicted {
            font-size: 14px;
            font-weight: 600;
            color: var(--primary-color);
            margin-top: 5px;
        }

        .measurement-highlight .percent-predicted {
            color: rgba(255, 255, 255, 0.9) !important;
        }

        /* üéØ END NEW: Style for %Predicted */


        /* Measurements Grid */
        .measurements-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 15px;
            margin-bottom: 20px;
        }

        /* Status Badges */
        .status-badge {
            display: inline-flex;
            align-items: center;
            padding: 6px 14px;
            border-radius: 16px;
            font-weight: 600;
            font-size: 11px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            color: white;
            -webkit-print-color-adjust: exact;
            print-color-adjust: exact;
        }

        .status-badge::before {
            content: '‚óè';
            margin-right: 5px;
            font-size: 8px;
        }

        .status-normal {
            background: var(--success-color);
        }

        .status-warning {
            background: var(--warning-color);
        }

        .status-danger {
            background: var(--danger-color);
        }

        /* Comparison Table Styles */
        .comparison-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 15px;
            font-size: 12px;
            page-break-inside: avoid;
            border: 1px solid var(--border-light);
            border-radius: 8px;
            overflow: hidden;
            /* ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö border-radius */
        }

        .comparison-table th,
        .comparison-table td {
            padding: 10px 12px;
            text-align: left;
            border: none;
        }

        .comparison-table thead th {
            font-weight: 700;
            color: var(--text-primary);
            background-color: var(--bg-light);
            border-bottom: 2px solid var(--border-light);
            -webkit-print-color-adjust: exact;
            print-color-adjust: exact;
            text-transform: uppercase;
            font-size: 11px;
        }

        .comparison-table tbody td {
            border-bottom: 1px solid var(--border-light);
            color: var(--text-secondary);
        }

        .comparison-table tbody tr:last-child td {
            border-bottom: none;
        }

        .comparison-table .param-name {
            font-weight: 600;
            color: var(--text-primary);
            font-size: 13px;
        }

        /* END: Comparison Table Styles */

        /* START: Added Style for Gender Subtitle */
        .gender-subtitle {
            font-size: 16px;
            font-weight: 600;
            color: var(--text-primary);
            margin-top: 25px;
            margin-bottom: 10px;
            padding-bottom: 8px;
            border-bottom: 2px solid var(--border-light);
        }

        .gender-subtitle:first-of-type {
            margin-top: 5px;
        }

        /* END: Added Style for Gender Subtitle */

        /* Footer */
        .footer {
            background: var(--bg-light);
            text-align: center;
            padding: 20mm 20mm 15mm 20mm;
            border-top: 1px solid var(--border-light);
        }

        .footer-content {
            color: var(--text-muted);
            font-size: 12px;
            line-height: 1.6;
        }

        .generation-time {
            margin-top: 8px;
            font-weight: 600;
            color: var(--text-secondary);
            font-size: 13px;
        }

        /* PDF Page Settings */
        @page {
            size: A4 portrait;
            margin: 0;
        }

        /* Print-specific optimizations */
        @media print {
            body {
                font-size: 12px;
            }

            .container {
                box-shadow: none;
                max-width: 210mm;
                width: 100%;
                padding: 0;
                margin: 0;
            }

            .content {
                padding: 15mm 15mm;
            }

            .header {
                padding: 20mm 15mm 15mm 15mm;
            }

            .section {
                margin-bottom: 20px;
            }

            .info-grid,
            .measurements-grid {
                gap: 12px;
            }

            .info-card {
                padding: 15px;
            }

            .measurement-highlight .info-value {
                font-size: 18px;
            }
        }

        /* Single column layout for mobile/small screens */
        @media (max-width: 600px) {

            .info-grid,
            .measurements-grid {
                grid-template-columns: 1fr;
            }

            .header {
                padding: 20px;
            }

            .content {
                padding: 20px;
            }
        }

        /* Utility classes */
        .text-center {
            text-align: center;
        }

        .text-large {
            font-size: 15px;
        }

        .font-bold {
            font-weight: 600;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="header">
            <h1>‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏î‡∏Ñ‡πà‡∏≤</h1>
            <p>SMARTBREATH Monitoring System</p>
            <div class="report-id">‡∏£‡∏´‡∏±‡∏™‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô: RPT-<%= (record.id || 'UNKNOWN' ).substring(0, 8).toUpperCase() %>
            </div>
        </div>

        <div class="content">

            <% if (patientInfo && patientInfo.name) { %>
            <div class="section">
                <div class="section-header">
                    <h2>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô</h2>
                </div>
                <div class="patient-info-card">
                    <div>
                        <span>‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•:</span>
                        <strong>
                            <%= patientInfo.name %>
                        </strong>
                    </div>
                    <div>
                        <span>‡∏≠‡∏≤‡∏¢‡∏∏:</span>
                        <strong>
                            <%= patientInfo.age %> ‡∏õ‡∏µ
                        </strong>
                    </div>
                    <div>
                        <span>‡πÄ‡∏û‡∏®:</span>
                        <strong>
                            <%= patientInfo.gender || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏' %>
                        </strong>
                    </div>
                    <div>
                        <span>‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á:</span>
                        <strong>
                            <%= patientInfo.height %> ‡∏ã‡∏°.
                        </strong>
                    </div>
                    <div>
                        <span>‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å:</span>
                        <strong>
                            <%= patientInfo.weight %> ‡∏Å‡∏Å.
                        </strong>
                    </div>
                </div>
            </div>
            <% } %>
            <div class="section">
                <div class="section-header">
                    <h2>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå</h2>
                </div>
                <div class="info-grid">
                    <div class="info-card">
                        <span class="info-label">‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå</span>
                        <div class="info-value">
                            <%= machine.deviceName || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏' %>
                        </div>
                    </div>
                    <div class="info-card">
                        <span class="info-label">‡∏£‡∏∏‡πà‡∏ô</span>
                        <div class="info-value">
                            <%= machine.model || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏' %>
                        </div>
                    </div>
                </div>
            </div>

            <div class="section force-page-break-before">
                <div class="section-header">
                    <h2>‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏î</h2>
                </div>
                <div class="measurements-grid">
                    <div class="info-card measurement-highlight">
                        <span class="info-label">SpO2 (‡∏≠‡∏≠‡∏Å‡∏ã‡∏¥‡πÄ‡∏à‡∏ô‡πÉ‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏î)</span>
                        <div class="info-value">
                            <%= record.spo2 || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏' %> <small style="font-size: 13px;"> %</small>
                        </div>
                    </div>
                    <div class="info-card measurement-highlight">
                        <span class="info-label">FEV1 (‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏•‡∏°‡∏´‡∏≤‡∏¢‡πÉ‡∏à)</span>
                        <div class="info-value">
                            <%= record.fev1 || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏' %> <small style="font-size: 13px;"> ‡∏•‡∏¥‡∏ï‡∏£</small>
                            <% const fev1Observed=parseFloat(record.fev1); const fev1Predicted=predicted.FEV1; if
                                (!isNaN(fev1Observed) && fev1Predicted) { const percent=(fev1Observed / fev1Predicted * 100).toFixed(1); %>
                            <div class="percent-predicted">
                                <%= percent %> %Predicted
                            </div>
                            <% } %>
                        </div>
                    </div>
                    <div class="info-card measurement-highlight">
                        <span class="info-label">FVC (‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏∏‡∏õ‡∏≠‡∏î)</span>
                        <div class="info-value">
                            <%= record.fvc || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏' %> <small style="font-size: 13px;"> ‡∏•‡∏¥‡∏ï‡∏£</small>
                            <% const fvcObserved=parseFloat(record.fvc); const fvcPredicted=predicted.FVC; if
                                (!isNaN(fvcObserved) && fvcPredicted) { const percent=(fvcObserved / fvcPredicted * 100).toFixed(1); %>
                            <div class="percent-predicted">
                                <%= percent %> %Predicted
                            </div>
                            <% } %>
                        </div>
                    </div>
                    <div class="info-card measurement-highlight">
                        <span class="info-label">PEF (‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡πÑ‡∏´‡∏•‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î)</span>
                        <div class="info-value">
                            <%= record.pef || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏' %> <small style="font-size: 13px;"> ‡∏•‡∏¥‡∏ï‡∏£/‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ</small>
                            <% const pefObserved=parseFloat(record.pef); const pefPredicted=predicted.PEF; if
                                (!isNaN(pefObserved) && pefPredicted) { const percent=(pefObserved / pefPredicted * 100).toFixed(1); %>
                            <div class="percent-predicted">
                                <%= percent %> %Predicted
                            </div>
                            <% } %>
                        </div>
                    </div>
                </div>

                <div class="unbreakable-group">
                    <h3 class="gender-subtitle">‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡∏ì‡πå (Predicted Values)</h3>
                    <table class="comparison-table">
                        <thead>
                            <tr>
                                <th>‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå</th>
                                <th>‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ß‡∏±‡∏î‡πÑ‡∏î‡πâ (Observed)</th>
                                <th>‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡∏ì‡πå (Predicted)</th>
                                <th>% ‡∏Ñ‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡∏ì‡πå</th>
                                <th>‡∏´‡∏ô‡πà‡∏ß‡∏¢</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% const fev1Obs=parseFloat(record.fev1); const fvcObs=parseFloat(record.fvc); const
                                pefObs=parseFloat(record.pef); %>

                            <tr>
                                <td class="param-name">FEV1</td>
                                <td>
                                    <%= !isNaN(fev1Obs) ? fev1Obs.toFixed(2) : 'N/A' %>
                                </td>
                                <td>
                                    <%= predicted.FEV1 ? predicted.FEV1.toFixed(2) : 'N/A' %>
                                </td>
                                <td>
                                    <% if (predicted.FEV1 && !isNaN(fev1Obs)) { %>
                                    <span class="font-bold">
                                        <%= (fev1Obs / predicted.FEV1 * 100).toFixed(1) %> %
                                    </span>
                                    <% } else { %>
                                    N/A
                                    <% } %>
                                </td>
                                <td>‡∏•‡∏¥‡∏ï‡∏£</td>
                            </tr>

                            <tr>
                                <td class="param-name">FVC</td>
                                <td>
                                    <%= !isNaN(fvcObs) ? fvcObs.toFixed(2) : 'N/A' %>
                                </td>
                                <td>
                                    <%= predicted.FVC ? predicted.FVC.toFixed(2) : 'N/A' %>
                                </td>
                                <td>
                                    <% if (predicted.FVC && !isNaN(fvcObs)) { %>
                                    <span class="font-bold">
                                        <%= (fvcObs / predicted.FVC * 100).toFixed(1) %> %
                                    </span>
                                    <% } else { %>
                                    N/A
                                    <% } %>
                                </td>
                                <td>‡∏•‡∏¥‡∏ï‡∏£</td>
                            </tr>

                            <tr>
                                <td class="param-name">PEF</td>
                                <td>
                                    <%= !isNaN(pefObs) ? pefObs.toFixed(0) : 'N/A' %>
                                </td>
                                <td>
                                    <%= predicted.PEF ? predicted.PEF.toFixed(0) : 'N/A' %>
                                </td>
                                <td>
                                    <% if (predicted.PEF && !isNaN(pefObs)) { %>
                                    <span class="font-bold">
                                        <%= (pefObs / predicted.PEF * 100).toFixed(1) %> %
                                    </span>
                                    <% } else { %>
                                    N/A
                                    <% } %>
                                </td>
                                <td>‡∏•‡∏¥‡∏ï‡∏£/‡∏ô‡∏≤‡∏ó‡∏µ</td>
                            </tr>

                            <tr>
                                <td class="param-name">FEV1/FVC Ratio</td>
                                <td>
                                    <% const fev1fvcObservedRatio=(fev1Obs / fvcObs); // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°
                                        if (!isNaN(fev1fvcObservedRatio) && fvcObs> 0) { %>
                                        <%= (fev1fvcObservedRatio * 100).toFixed(1) %>
                                        <% } else { %>
                                        N/A
                                        <% } %>
                                </td>
                                <td>
                                    <% // predicted.FEV1_FVC_RATIO ‡∏ñ‡∏π‡∏Å‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå (e.g. 75.3)
                                        if (predicted.FEV1_FVC_RATIO && !isNaN(predicted.FEV1_FVC_RATIO)) { %>
                                        <%= predicted.FEV1_FVC_RATIO.toFixed(1) %>
                                        <% } else { %>
                                        N/A
                                        <% } %>
                                </td>
                                <td>
                                    <span style="color: var(--text-muted);">N/A</span>
                                </td>
                                <td>%</td>
                            </tr>

                        </tbody>
                    </table>
                </div>

                <div class="info-grid">
                    <div class="info-card">
                        <span class="info-label">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏≠‡∏î (FEV1/FVC)</span>
                        <div class="info-value">
                            <% var statusClass='status-normal' ; var statusText='‡∏õ‡∏Å‡∏ï‡∏¥' ; var ratio=null; if
                                (record.fev1Fvc) { ratio=parseFloat(record.fev1Fvc); } else if (record.fev1 &&
                                record.fvc) { var fev1Val=parseFloat(record.fev1); var fvcVal=parseFloat(record.fvc); if
                                (!isNaN(fev1Val) && !isNaN(fvcVal) && fvcVal> 0) {
                                ratio = fev1Val / fvcVal;
                                }
                                }

                                if (ratio !== null && !isNaN(ratio)) {
                                if (ratio < 0.45) { statusClass='status-danger' ; statusText='‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏î‡∏Å‡∏±‡πâ‡∏ô‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á' ; } else
                                if (ratio < 0.60) { statusClass='status-danger' ; statusText='‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏î‡∏Å‡∏±‡πâ‡∏ô‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á' ; }
                                else if (ratio < 0.70) { statusClass='status-warning' ;
                                statusText='‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏î‡∏Å‡∏±‡πâ‡∏ô‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢' ; } } else { statusClass='status-warning' ;
                                statusText='‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå' ; } %>
                            <div>
                                <span class="status-badge <%= statusClass %>">
                                    <%= statusText %>
                                </span>
                                <% if (ratio !==null && !isNaN(ratio)) { %>
                                <div style="margin-top: 6px; font-size: 13px; color: var(--text-secondary);">
                                    ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏™‡πà‡∏ß‡∏ô: **<%= (ratio * 100).toFixed(1) %> %**
                                </div>
                                <% } %>
                            </div>
                        </div>
                    </div>
                    <div class="info-card">
                        <span class="info-label">‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏î</span>
                        <div class="info-value text-large">
                            <% var measureDate=record.measuredAt ? new Date(record.measuredAt) : new Date(); var
                                formatOptions={ weekday: 'long' , year: 'numeric' , month: 'long' , day: 'numeric' ,
                                hour: '2-digit' , minute: '2-digit' , timeZone: 'Asia/Bangkok' }; %>
                            <%= measureDate.toLocaleString('th-TH', formatOptions) %>
                        </div>
                    </div>
                </div>
            </div>
            <% if (record.notes && record.notes.trim()) { %>
            <div class="section">
                <div class="section-header">
                    <h2>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</h2>
                </div>
                <div class="info-grid single-column">
                    <div class="info-card">
                        <span class="info-label">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</span>
                        <div class="info-value" style="font-size: 15px; line-height: 1.6;">
                            <%= record.notes %>
                        </div>
                    </div>
                </div>
            </div>
            <% } %>
        </div>

        <div class="footer">
            <div class="footer-content">
                <div><strong>‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å SMARTBREATH</strong></div>
                <div class="generation-time">
                    <% var currentDate=new Date(); var generationOptions={ year: 'numeric' , month: 'long' ,
                        day: 'numeric' , hour: '2-digit' , minute: '2-digit' , timeZone: 'Asia/Bangkok' }; %>
                    ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô: <%= currentDate.toLocaleString('th-TH', generationOptions) %>
                </div>
            </div>
        </div>
    </div>
</body>

</html>